<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.cn" />
	
    <!-- 开启注解 -->
    <mvc:annotation-driven /> 
	
	<!--引入属性文件  -->
 	<context:property-placeholder location="classpath:jdbc.properties" />
 
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
    <!-- 配置国际化资源文件路径 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
<!--             定义消息资源文件的相对路径 -->
            <value>message</value>
        </property>
    </bean>	

<!-- dataSource  -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>
	
	
<!-- **************************方式一Start*********************************** -->
	<!-- 创建SqlSessionFactory，同时指定数据源-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 指定sqlMapConfig总配置文件，订制的environment在spring容器中不在生效-->  
		<property  name="configLocation"  value="classpath:mybatis/sqlMapConfig.xml"/>  
  		<!--指定实体类映射文件，可以指定同时指定某一包以及子包下面的所有配置文件，mapperLocations和configLocation有一个即可，
  			当需要为实体类指定别名时，可指定configLocation属性，再在mybatis总配置文件中采用mapper引入实体类映射文件 -->  
		<!-- <property  name="mapperLocations"  value="classpath*:com/xxt/ibatis/dbcp/**/*.xml"/>  -->
		<!-- 自动扫描mapping.xml文件 -->
<!-- 		<property name="mapperLocations" value="classpath:com/cn/uuu/mapping/*.xml"></property> -->
	</bean>

    <bean id="oneSqlMapExecutorTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
<!-- **************************方式一END*********************************** -->

<!-- **************************方式二Start*********************************** -->
 <!-- 创建SqlSessionFactory，同时指定数据源-->  
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">   
     	<property name="dataSource" ref="dataSource" />   
     </bean>   
  
     <!--创建数据映射器，数据映射器必须为接口-->  
     <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">   
     	<property name="mapperInterface" value="com.cn.uuu.dao.UserMapper" />   
    	 <property name="sqlSessionFactory" ref="sqlSessionFactory" />   
     </bean>  
  
     <bean id="userDaoImpl" class="com.cn.uuu.dao.impl.UserDaoImpl">  
     	<property name="userMapper" ref="userMapper"/>
     </bean>
<!-- **************************方式二END*********************************** -->
</beans>